{"version":3,"file":"media_manager.min.js","sources":["../src/media_manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/ //\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * Plenary meeting Basic media manager\n *\n * @package    plenumform_basic\n * @module     plenumform_basic/media_manager\n * @copyright  2023 Daniel Thies\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from \"core/ajax\";\nimport Templates from \"core/templates\";\nimport Notification from \"core/notification\";\n\nexport default class MediaManager {\n    /**\n     * Initialize player plugin\n     *\n     * @param {int} contextid\n     * @param {int} delay\n     *\n     * @returns {bool}\n     */\n    constructor(contextid, delay) {\n        this.contextid = contextid;\n\n        if (!delay) {\n            return false;\n        }\n\n        setInterval(() => {\n            this.updateMotions(contextid);\n        }, delay);\n\n        return true;\n    }\n\n    /**\n     * Update motions\n     *\n     * @param {int} contextid\n     */\n    async updateMotions(contextid) {\n        const selector = `[data-contextid=\"${contextid}\"][data-region=\"plenum-motions\"]`;\n        const content = document.querySelector(selector);\n        if (content) {\n            const response = await Ajax.call([{\n                args: {\n                    contextid: contextid\n                },\n                contextid: contextid,\n                fail: Notification.exception,\n                methodname: 'mod_plenum_update_content'\n            }])[0];\n            if (response.motions) {\n                Templates.replaceNodeContents(content, response.motions, response.javascript);\n            }\n        }\n    }\n}\n"],"names":["constructor","contextid","delay","setInterval","updateMotions","selector","content","document","querySelector","response","Ajax","call","args","fail","Notification","exception","methodname","motions","replaceNodeContents","javascript"],"mappings":";;;;;;;;yPAoCIA,YAAYC,UAAWC,mBACdD,UAAYA,YAEZC,QAILC,aAAY,UACHC,cAAcH,aACpBC,QAEI,uBAQSD,iBACVI,oCAA+BJ,8CAC/BK,QAAUC,SAASC,cAAcH,aACnCC,QAAS,OACHG,eAAiBC,cAAKC,KAAK,CAAC,CAC9BC,KAAM,CACFX,UAAWA,WAEfA,UAAWA,UACXY,KAAMC,sBAAaC,UACnBC,WAAY,+BACZ,GACAP,SAASQ,4BACCC,oBAAoBZ,QAASG,SAASQ,QAASR,SAASU"}