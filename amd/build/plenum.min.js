define("mod_plenum/plenum",["exports","core/fragment","core/templates","core_form/modalform","core/notification","core/str"],(function(_exports,_fragment,_templates,_modalform,_notification,_str){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/*
   * Plenary meeting main page js
   *
   * @package    mod_plenum
   * @module     mod_plenum/plenum
   * @copyright  2023 Daniel Thies
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_fragment=_interopRequireDefault(_fragment),_templates=_interopRequireDefault(_templates),_modalform=_interopRequireDefault(_modalform),_notification=_interopRequireDefault(_notification);const SELECTORS_PREVIEW='.modal-body [data-region="view-motion"]';_exports.default=class{constructor(contextid){return this.contextid=contextid,this.addListeners(),!0}addListeners(){document.querySelector("body").removeEventListener("click",handleClick),document.querySelector("body").addEventListener("click",handleClick)}};const handleClick=function(e){const button=e.target.closest('[data-region="plenum-motions"][data-contextid] [data-action], .modal-body [data-region="view-motion"] [data-action], .modal-body [data-region="plenum-activity-report"][data-contextid] [data-action]');if(button){const action=button.getAttribute("data-action"),contextid=button.closest("[data-contextid]").getAttribute("data-contextid");if(e.stopPropagation(),e.preventDefault(),"move"==action){const type=button.getAttribute("data-type"),modalForm=new _modalform.default({args:{contextid:contextid,type:button.getAttribute("data-type")},formClass:"plenumtype_".concat(type,"\\form\\edit_motion"),modalConfig:{title:(0,_str.get_string)("editingmotiontype","plenumtype_".concat(type))}});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(e=>{const motionCreated=new CustomEvent("motioncreated",{detail:e.detail});document.body.dispatchEvent(motionCreated)})),modalForm.show()}else if(["adopt","allow","decline","deny"].includes(action)){const id=e.target.closest("[data-motion]").getAttribute("data-motion"),modalForm=new _modalform.default({args:{contextid:contextid,id:id,state:action},formClass:"mod_plenum\\form\\change_state",modalConfig:{title:(0,_str.get_string)("confirm")}});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(e=>{const motionUpdated=new CustomEvent("motionupdated",{detail:e.detail});document.body.dispatchEvent(motionUpdated)})),modalForm.show()}else if("close"==action){const id=e.target.closest("[data-motion]").getAttribute("data-motion"),modalForm=new _modalform.default({formClass:"mod_plenum\\form\\close_motion",args:{contextid:contextid,id:id,state:action}});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(e=>{const motionUpdated=new CustomEvent("motionupdated",{detail:e.detail});document.body.dispatchEvent(motionUpdated)})),modalForm.show()}else if("preview"==action){const id=e.target.closest("[data-motion]").getAttribute("data-motion");_fragment.default.loadFragment("mod_plenum","motion",contextid,{id:id}).done((html=>{button.closest(SELECTORS_PREVIEW)?_templates.default.replaceNodeContents(button.closest(SELECTORS_PREVIEW),html):_notification.default.alert((0,_str.get_string)("viewmotion","mod_plenum"),html)})).fail(_notification.default.exeption)}}};return _exports.default}));

//# sourceMappingURL=plenum.min.js.map