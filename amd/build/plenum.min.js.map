{"version":3,"file":"plenum.min.js","sources":["../src/plenum.js"],"sourcesContent":["/*\n * Plenary meeting main page js\n *\n * @package    mod_plenum\n * @module     mod_plenum/plenum\n * @copyright  2023 Daniel Thies\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Fragment from \"core/fragment\";\nimport Templates from \"core/templates\";\nimport ModalForm from \"core_form/modalform\";\nimport Notification from \"core/notification\";\nimport {get_string as getString} from \"core/str\";\n\nexport default class Plenum {\n    /**\n     * Initialize player plugin\n     *\n     * @param {int} contextid\n     *\n     * @returns {bool}\n     */\n    constructor(contextid) {\n        this.contextid = contextid;\n\n        this.addListeners();\n\n        return true;\n    }\n\n    /**\n     * Register player events to respond to user interaction and play progress.\n     */\n    addListeners() {\n        document.querySelector('body').removeEventListener('click', handleClick);\n        document.querySelector('body').addEventListener('click', handleClick);\n    }\n}\n\nconst handleClick = function(e) {\n    const button = e.target.closest(\n        '[data-region=\"plenum-motions\"][data-contextid] [data-action], .modal-body [data-contextid] [data-action]'\n    );\n    if (button) {\n        const action = button.getAttribute('data-action'),\n            contextid = button.closest('[data-contextid]').getAttribute('data-contextid');\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (action == 'move') {\n            const type = button.getAttribute('data-type');\n            const modalForm = new ModalForm({\n                args: {\n                    contextid: contextid,\n                    type: button.getAttribute('data-type')\n                },\n                formClass: `plenumtype_${type}\\\\form\\\\edit_motion`,\n                modalConfig: {title: getString('editingmotiontype', `plenumtype_${type}`)}\n            });\n            modalForm.show();\n        } else if (['adopt', 'allow', 'decline', 'deny'].includes(action)) {\n            const id = e.target.closest('[data-motion]').getAttribute('data-motion');\n            const modalForm = new ModalForm({\n                args: {\n                    contextid: contextid,\n                    id: id,\n                    state: action\n                },\n                formClass: 'mod_plenum\\\\form\\\\change_state',\n                modalConfig: {title: getString('confirm')}\n            });\n            modalForm.show();\n        } else if (action == 'close') {\n            const id = e.target.closest('[data-motion]').getAttribute('data-motion');\n            const modalForm = new ModalForm({\n                formClass: 'mod_plenum\\\\form\\\\close_motion',\n                args: {contextid: contextid, id: id, state: action}\n            });\n            modalForm.show();\n        } else if (action == 'preview') {\n            const id = e.target.closest('[data-motion]').getAttribute('data-motion');\n            Fragment.loadFragment(\n                'mod_plenum',\n                'motion',\n                contextid,\n                {id: id}\n            ).done((html) => {\n                if (button.closest('.modal-body') && !button.closest('[data-region=\"plenum-activity-report\"]')) {\n                    Templates.replaceNodeContents(button.closest('.modal-body'), '<div>' + html + '</div>');\n                } else {\n                    Notification.alert(getString('viewmotion', 'mod_plenum'), html);\n                }\n            }).fail(Notification.exeption);\n        }\n    }\n};\n"],"names":["constructor","contextid","addListeners","document","querySelector","removeEventListener","handleClick","addEventListener","e","button","target","closest","action","getAttribute","stopPropagation","preventDefault","type","ModalForm","args","formClass","modalConfig","title","show","includes","id","state","loadFragment","done","html","replaceNodeContents","alert","fail","Notification","exeption"],"mappings":";;;;;;;;wSAuBIA,YAAYC,uBACHA,UAAYA,eAEZC,gBAEE,EAMXA,eACIC,SAASC,cAAc,QAAQC,oBAAoB,QAASC,aAC5DH,SAASC,cAAc,QAAQG,iBAAiB,QAASD,qBAI3DA,YAAc,SAASE,SACnBC,OAASD,EAAEE,OAAOC,QACpB,+GAEAF,OAAQ,OACFG,OAASH,OAAOI,aAAa,eAC/BZ,UAAYQ,OAAOE,QAAQ,oBAAoBE,aAAa,qBAChEL,EAAEM,kBACFN,EAAEO,iBAEY,QAAVH,OAAkB,OACZI,KAAOP,OAAOI,aAAa,aACf,IAAII,mBAAU,CAC5BC,KAAM,CACFjB,UAAWA,UACXe,KAAMP,OAAOI,aAAa,cAE9BM,UAAY,cAAaH,0BACzBI,YAAa,CAACC,OAAO,mBAAU,oBAAsB,cAAaL,WAE5DM,YACP,GAAI,CAAC,QAAS,QAAS,UAAW,QAAQC,SAASX,QAAS,OACzDY,GAAKhB,EAAEE,OAAOC,QAAQ,iBAAiBE,aAAa,eACxC,IAAII,mBAAU,CAC5BC,KAAM,CACFjB,UAAWA,UACXuB,GAAIA,GACJC,MAAOb,QAEXO,UAAW,iCACXC,YAAa,CAACC,OAAO,mBAAU,cAEzBC,YACP,GAAc,SAAVV,OAAmB,OACpBY,GAAKhB,EAAEE,OAAOC,QAAQ,iBAAiBE,aAAa,eACxC,IAAII,mBAAU,CAC5BE,UAAW,iCACXD,KAAM,CAACjB,UAAWA,UAAWuB,GAAIA,GAAIC,MAAOb,UAEtCU,YACP,GAAc,WAAVV,OAAqB,OACtBY,GAAKhB,EAAEE,OAAOC,QAAQ,iBAAiBE,aAAa,iCACjDa,aACL,aACA,SACAzB,UACA,CAACuB,GAAIA,KACPG,MAAMC,OACAnB,OAAOE,QAAQ,iBAAmBF,OAAOE,QAAQ,6DACvCkB,oBAAoBpB,OAAOE,QAAQ,eAAgB,QAAUiB,KAAO,gCAEjEE,OAAM,mBAAU,aAAc,cAAeF,SAE/DG,KAAKC,sBAAaC"}